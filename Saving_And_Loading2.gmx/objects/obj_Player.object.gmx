<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.5;                //The gravity
player_speed = 0.4;        //Player acceleration
player_speed_max = 4;      //The fasted the player is allowed to go
jump_speed = -11;          //How high the player jumps
player_friction = 0.2;     //The friction of the player

gravity_direction = 270;   //Direction of the gravity
image_speed = 0.35;        //The speed of the players image


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Sets up what the buttons do
if keyboard_check(global.Key[2]) &amp;&amp; !place_meeting(x - 1, y, obj_Wall) hspeed -= player_speed;
if keyboard_check(global.Key[3]) &amp;&amp; !place_meeting(x + 1, y, obj_Wall) hspeed += player_speed;

//Variable jumping :D
if keyboard_check(global.Key[4])
{
if place_meeting(x, y + 1, obj_Wall) || place_meeting(x, y + 1, obj_Ball)
    {
    vspeed = jump_speed;
    }
}

if keyboard_check_released(global.Key[4])
{
vspeed /= 3;
}

//Limits the players speed
if abs(hspeed) &gt; player_speed_max hspeed = player_speed_max * sign(hspeed);

//Sets the players friction
if abs(hspeed) &gt; 0
{
friction = player_friction
image_xscale = sign(hspeed);
}

//Limit fall speed
if vspeed &gt; 30
{
vspeed = 30;
}

//Sets the gravity 
if !place_meeting(x, y + 1, obj_Wall) &amp;&amp; ! place_meeting(x, y + 1, obj_Ball) gravity = grav else gravity = 0;

//Sets the player sprites
if speed &gt; 0 image_speed = 0.35 else image_speed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dd;
dd = point_direction(other.x, other.y, x, y);
while(place_meeting(x, y, other))
{
x += lengthdir_x(0.5, dd);
y += lengthdir_y(0.5, dd);
}

if place_meeting(x, y + 1, obj_Wall)
{
vspeed = 0;
gravity = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Ball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dd;
dd = point_direction(other.x, other.y, x, y);
while(place_meeting(x, y, other))
{
x += lengthdir_x(0.5, dd);
y += lengthdir_y(0.5, dd);
other.x -= lengthdir_x(0.5, dd);
other.y -= lengthdir_y(0.5, dd);
}

with (other) motion_add(dd - 180, other.speed * image_xscale);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
